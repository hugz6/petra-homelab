name: Build and Push Helm Charts

on:
  push:
    tags:
      - "**/v*.*.*"
      - "**/v*.*.*-*"

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Helm
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: "latest"

      # 3Ô∏è‚É£ Login to GHCR
      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin

      # 4Ô∏è‚É£ Extract chart name and version from tag
      - name: Extract chart name and version
        id: chart_info
        run: |
          # Tag format: chartname/v1.2.3
          TAG="${GITHUB_REF#refs/tags/}"
          CHART_NAME="${TAG%%/*}"
          TAG_VERSION="${TAG#*/v}"

          echo "chart_name=$CHART_NAME" >> $GITHUB_OUTPUT
          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "Chart name: $CHART_NAME"
          echo "Tag version: $TAG_VERSION"

      # 5Ô∏è‚É£ Verify chart exists
      - name: Verify chart directory
        run: |
          CHART_PATH="helm-charts/${{ steps.chart_info.outputs.chart_name }}"
          if [ ! -d "$CHART_PATH" ]; then
            echo "Error: Chart directory $CHART_PATH does not exist"
            exit 1
          fi
          if [ ! -f "$CHART_PATH/Chart.yaml" ]; then
            echo "Error: Chart.yaml not found in $CHART_PATH"
            exit 1
          fi
          echo "chart_path=$CHART_PATH" >> $GITHUB_ENV

      # 6Ô∏è‚É£ Extract and verify chart version
      - name: Extract and verify chart version
        run: |
          CHART_VERSION=$(grep '^version:' ${{ env.chart_path }}/Chart.yaml | awk '{print $2}')
          echo "Chart.yaml version: $CHART_VERSION"

          if [ "$CHART_VERSION" != "${{ steps.chart_info.outputs.tag_version }}" ]; then
            echo "Error: Chart version ($CHART_VERSION) does not match tag version (${{ steps.chart_info.outputs.tag_version }})"
            exit 1
          fi
          echo "‚úì Version match confirmed"

      # 7Ô∏è‚É£ Lint Helm chart
      - name: Lint Helm chart
        run: |
          helm lint ${{ env.chart_path }}

      # 8Ô∏è‚É£ Package Helm chart
      - name: Package Helm chart
        run: |
          helm package ${{ env.chart_path }} --destination .

      # 9Ô∏è‚É£ Push Helm chart to GHCR
      - name: Push Helm chart to OCI registry
        run: |
          CHART_NAME="${{ steps.chart_info.outputs.chart_name }}"
          VERSION="${{ steps.chart_info.outputs.tag_version }}"
          OWNER="${{ github.repository_owner }}"
          helm push ${CHART_NAME}-${VERSION}.tgz oci://ghcr.io/${OWNER}/${CHART_NAME}

      # üîü Upload chart artifact
      - name: Upload chart artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart-${{ steps.chart_info.outputs.chart_name }}-${{ steps.chart_info.outputs.tag_version }}
          path: "*.tgz"
          retention-days: 30
